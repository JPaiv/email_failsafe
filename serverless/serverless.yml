service: email-failsafe-service

frameworkVersion: "2"

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: non-linux

provider:
  name: aws
  stage: test
  runtime: python3.8
  region: eu-central-1
  lambdaHashingVersion: 20201221
  vpc:
    subnetIds:
      - ${ssm:vpc_public_subnet_id}
    securityGroupIds:
      - ${ssm:vpc_security_group_id}
  environment:
    EMAIL_SENDER:
    REGION: eu-west-1
    EMAIL_TABLE: emailTable
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn"] }

functions:
  handler:
    description: Lambda for sending emails.
    handler: handler.handler
    events:
      - httpApi:
          path: /emails/post
          method: POST

resources:
  Resources:
    UsersDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: emailId
            AttributeType: S
        KeySchema:
          - AttributeName: emailId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: emailTable
