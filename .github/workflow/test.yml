name: "Terraform AWS infra deployment"

on:
  push:
    branches:
      - master

jobs:
  terraform:
    env:
      TF_VAR_region: eu-central-1
      TF_VAR_stage: test

    name: "Terraform"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        continue-on-error: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        continue-on-error: false

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./infra
        continue-on-error: false

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        working-directory: ./infra
        continue-on-error: false

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        working-directory: ./infra
        run: exit 1

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: ./infra
        continue-on-error: false

  serverless:
    name: "Serverless"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.8.1]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        continue-on-error: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
        continue-on-error: false

      - name: serverless deploy
        uses: serverless/github-action@master
        run: serverless deploy
        working-directory: ./serverless
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        continue-on-error: false
